geom_line(aes(color= "Predicted Tidal Height"), size =1.2) +
scale_x_datetime(name = "August 21-24, 2018",
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
ylab("Tide Height NAVD (ft)") +
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20,show_legend=TRUE),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95,show_legend=TRUE),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7,show_legend=TRUE),size=1.3, linetype = 1) +
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6")) +
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1))
cols<- c("Predicted Tidal Height"=  "#0072B2","Target"="black", "Target +3"="#D55E00", "Target -6"="#E69F00", "Refrigerator"="#999999")
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2) +
scale_x_datetime(name = "August 21-24, 2018",
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
ylab("Tide Height NAVD (ft)") +
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6")) +
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1))
windows(record=T)
cols<- c("Predicted Tidal Height"=  "#0072B2","Target"="black", "Target +3"="#D55E00", "Target -6"="#E69F00", "Refrigerator"="#999999")
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2) +
scale_x_datetime(name = "August 21-24, 2018",
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
ylab("Tide Height NAVD (ft)") +
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6")) +
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1))
windows(record=T)
cols<- c("Predicted Tidal Height"=  "#0072B2","Target"="black", "Target +3"="#D55E00", "Target -6"="#E69F00", "Refrigerator"="#999999")
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2) +
#Adding the day and every 4 hours for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018",
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the yintercept has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6")) +
#Added labs and removed ggtitle, so I can name the color = (this is the legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1))
windows(record=T)
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c(1,2,3,3,1)) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
library(rtide)
library(ggplot2)
library(scales) #
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c(1,2,3,3,1)) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45,linetype = 2),size=1.2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c(1,2,3,3,1)) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45,linetype = 2),size=1.2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6")) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c("dashed", "dashed", "solid","dashed","dashed")) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c("dashed", "dashed", "solid","dashed","dashed"),
linetype = guide_legend(override.aes = list(shape = c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c("dashed", "dashed", "solid","dashed","dashed"),
linetype = guide_legend(override.aes = list(c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = c("dashed", "dashed", "solid","dashed","dashed"),
linetype = guide_legend(override.aes = list(linetype=c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = guide_legend(override.aes = list(linetype=c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = guide_legend(override.aes = list=c(1,2,3,3,1))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
linetype = guide_legend(override.aes = list=c(1,2,3,3,1))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
color = guide_legend(override.aes = list(linetype=c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
color = guide_legend(override.aes = list)) +
guides(colour = guide_legend(override.aes = list(linetype=c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
color = guide_legend(override.aes = list(linetype=c(1,2,3,3,1)))) +
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),
color = guide_legend(override.aes = list(linetype=c(1,2,3,3,1))), guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,3,1))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,3,1))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
windows(record=T)
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,3,1))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,2,3,3,1))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
windows(record=T)
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,2,3,3,1))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,2,3))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("right"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,2,3))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("top"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,2,3))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Line Types") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("top"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
windows(record=T)
ggplot(data = dat, aes(x = DateTime, y = TideHeight_NAVD_ft)) +
geom_line(aes(color= "Predicted Tidal Height"), size =1.2, linetype=1) + #<- wanted to add this as part of the legend
#Adding the day and every 4 hours, with breaks = date_breaks(), for the time in the x-axis legend
scale_x_datetime(name = "August 21-24, 2018", #<- can be in labs(), also, but fine here, since we need to use scale_x_dateime anyways
labels = date_format("%d-%H:%M", tz="America/New_York"), breaks = date_breaks("4 hours")) +
#Notes- Used the link that was here, and some other links, but the `yintercep`t has to be inside the aes() for the legend to show for that geom_hline object, this was difficult to discover and might have been different before the new ggplot2 update
geom_hline(aes(color = "Target",yintercept = -1.45),size=1.2,linetype = 2) +
geom_hline(aes(color = "Target +3",yintercept = -1.20),size=1.5, linetype = 3) +
geom_hline(aes(color = "Target -6",yintercept = -1.95),size=1.5, linetype = 3) +
geom_hline(aes(color = "Refrigerator",yintercept = -0.7),size=1.3, linetype = 1) +
#Rearranged the scale_color_manual, to show the legend in the order of the lines shown in "breaks=c()" instead of in alpahebtical order (which is the default)
scale_color_manual(values =cols, breaks = c("Predicted Tidal Height","Refrigerator","Target +3","Target", "Target -6"),guide= 'legend') +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1,3,2,3))))+
#Added labs() and removed ggtitle  and scale_y_continuous (this is more for y-axis control such as using limits=c(start,end)), so I can rename the legend in color = (legend title)
labs(main= "Cedar Key", ylab= "Tide Height NAVD (ft)", color= "Tidal Lines") +
#Added some themes, can change legend to "top", "bottom", and "left" if desired
theme(legend.position=("top"),
panel.border = element_rect(color = "black", size = 1, fill = NA, linetype="solid"),
axis.text.x = element_text(angle = 90, hjust = 1)) #<- to make the a-axis ticks 90 degrees
